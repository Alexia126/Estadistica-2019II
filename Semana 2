Práctica: Variables y frecuencia 

Ejercicio 1: ¿Que clase de objeto es BIC? y ¿Qué clase de objeto es geospiza? 
Sol: Usando la funció str() y class () se tiene
BIC: class(BIC) [1] "function"
     str(BIC)  function (object, ...)  
geospiza: class(geospiza) [1] "list"
          str(geospiza) List of 4
 $ geospiza.tree:List of 4
  ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
  ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
  ..$ Nnode      : int 13
  ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
  ..- attr(*, "class")= chr "phylo"
 $ geospiza.data: num [1:13, 1:5] 4.4 4.35 4.22 4.26 4.24 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:13] "magnirostris" "conirostris" "difficilis" "scandens" ...
  .. ..$ : chr [1:5] "wingL" "tarsusL" "culmenL" "beakD" ...
 $ phy          :List of 4
  ..$ edge       : num [1:26, 1:2] 15 16 17 18 19 20 21 22 23 24 ...
  ..$ edge.length: num [1:26] 0.2974 0.0492 0.0686 0.134 0.1035 ...
  ..$ Nnode      : int 13
  ..$ tip.label  : chr [1:14] "fuliginosa" "fortis" "magnirostris" "conirostris" ...
  ..- attr(*, "class")= chr "phylo"
  
  Ejercicio 2:  ¿Qué tipo de variable es tarsusL y qué clase? 
Abra el objeto *tortues* y mire ¿qué tipo de variables tiene y qué clase son?, haga lo mismo con el objeto *mite.env* y revise ¿Qué tipo de variable es *shurb* y qué clase es? Recuerde siempre usar help para saber de donde vienen los datos.

tortues: str(tortues) 'data.frame':	48 obs. of  4 variables:
 $ long: num  93 94 96 101 102 103 104 106 107 112 ...
 $ larg: num  74 78 80 84 85 81 83 83 82 89 ...
 $ haut: num  37 35 35 39 38 37 39 39 38 40 ...
 $ sexe: Factor w/ 2 levels "M","F": 1 1 1 1 1 1 1 1 1 1 ...
 Tortues es un data.frame con 4 variables, tres de tipo númerico y una de tipo factor con dos niveles
 
 mite.env: str(mite.env) 'data.frame':	70 obs. of  5 variables:
 $ SubsDens : num  39.2 55 46.1 48.2 23.6 ...
 $ WatrCont : num  350 435 372 360 204 ...
 $ Substrate: Factor w/ 7 levels "Sphagn1","Sphagn2",..: 1 5 7 1 1 1 1 7 5 1 ...
 $ Shrub    : Ord.factor w/ 3 levels "None"<"Few"<"Many": 2 2 2 2 2 2 2 3 3 3 ...
 $ Topo     : Factor w/ 2 levels "Blanket","Hummock": 2 2 2 2 2 2 2 1 1 2 ...
 
 shurb es una variable de tipo factor ordinal con tres niveles 
 
 Ejercicio 3: Usando el data.frame *tortues* calcule la proporción de hembras y machos de la muestra
 
F <- length(which(tortues == 'F'))
F [1] 24
M<-length(which(tortues == 'M')) 
M [1] 24
paste(F,'/',M,sep = '') [1] "24/24"
F/M [1] 1
La proporción es 1 a 1 

Ejercicio 4: Usando el data.frame *tortues* calcule la proporción entre el ancho y el largo del caparazón, genere una tabla con la información de *tortues* y la nueva variable derivada.

medidas<-cbind(tortues$long, tortues$larg)
medidas
Tabla_medidas <- as.data.frame(cbind(paste('spp',1:48,sep = '_'),medidas))
Tabla_medidas
colnames(Tabla_medidas) <- c('Individuos', 'Ancho','Largo')
Tabla_medidas
prp <- tortues$larg/tortues$long
prp
Tabla_medidas_prp <- cbind.data.frame(Tabla_medidas, prp)
Tabla_medidas_prp

Ejercicio 5: ¿Cuántas especies de *Corvus* fueron muestreadas en la región Paleártica-Africana? Use el data.frame del género *Corvus*. ¿Qué porcentaje de *Corvus* muestreados habitan zonas abiertas?

data(corvus)
tabla<-table(corvus$phylog)
tabla
amer orien  pale 
    6    13     9 
Nueve especies fueron muestreadas en la región paleártica-africana

tabla<-table(corvus$habitat)
freq<-prop.table(freq)
freq
  clos      open 
0.3928571 0.6071429 
El 61% de las especies habitan en lugares abiertos

Ejercicio 6: ¿Cómo luce el gráfico de frecuencias para los tipos de hábitat del género *Corvus*?

plot(freq, main= "Hábitat", xlab= "Tipo", ylab= "Frecuencia", col = "coral2")

Ejercicio 7 :Encuentre el máximo, así como lo hizo para el mínimo para los datos atlas$birds

atlas$birds
xsp<- apply(atlas$birds,2,sum)
xsp 
min(xsp)[1] 2
xsp[which.min(xsp)] Fauvette_melanocephale 
                     2 
max(xsp) [1] 56
xsp[which.max(xsp)]  Fauvette_des_jardins 
                     56 
                  
Ejercicio 8: Repita el ejercicio para las variables continuas de tamaño de pico y tamaño del ala en el género *Corvus*. Busque cómo cambiar colores, ejes y algunas propiedades que le permitan mejorar el diseño del histograma.

Tamaño del pico
CB<-corvus$bill
CB [1] 52 45 60 49 50 55 56 73 60 51 66 56 63 72 67 85 60 48 61 61 80 63 66 73 58 62 59
[28] 57
tabla<-table(corvus$bill) 
tabla 45 48 49 50 51 52 55 56 57 58 59 60 61 62 63 66 67 72 73 80 85 
       1  1  1  1  1  1  1  2  1  1  1  3  2  1  2  2  1  1  2  1  1 
       
min(CB)[1] 45
max(CB)[1] 85
range(CB)[1] 45 85

bins<-seq(44.5,100.5,10)
bins [1] 44.5 54.5 64.5 74.5 84.5 94.5 Categorías con sus rangos 
datos<-cut(CB,bins)
datos  [1] (44.5,54.5] (44.5,54.5] (54.5,64.5] (44.5,54.5] (44.5,54.5] (54.5,64.5]
 [7] (54.5,64.5] (64.5,74.5] (54.5,64.5] (44.5,54.5] (64.5,74.5] (54.5,64.5]
[13] (54.5,64.5] (64.5,74.5] (64.5,74.5] (84.5,94.5] (54.5,64.5] (44.5,54.5]
[19] (54.5,64.5] (54.5,64.5] (74.5,84.5] (54.5,64.5] (64.5,74.5] (64.5,74.5]
[25] (54.5,64.5] (54.5,64.5] (54.5,64.5] (54.5,64.5]
Levels: (44.5,54.5] (54.5,64.5] (64.5,74.5] (74.5,84.5] (84.5,94.5]

freq_long<-table(datos)
freq_long datos
(92.5,102]  (102,112]  (112,122]  (122,132]  (132,142]  (142,152]  (152,162] 
         6          9          9          6          9          2          6 
 (162,172]  (172,182] 
         0          1 
         
transform(freq_long)
transform(freq_long, Relativ= prop.table(Freq), Acum= cumsum(Freq)) Data.frame con las frecuencias 

Gráfico 
hist(CB, breaks = bins, main = 'Longitudes de pico', xlab = "Longitud", ylab = "Frecuencia", col = "coral2")

Tamaño del ala

CW<-corvus$wing
CW [1] 237 300 321 292 333 264 286 319 382 346 397 370 377 232 293 365 343 226 325 345
[21] 473 350 430 432 388 424 379 330
tabla<-table(corvus$wing)
tabla 226 232 237 264 286 292 293 300 319 321 325 330 333 343 345 346 350 365 370 377 379 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
382 388 397 424 430 432 473 
  1   1   1   1   1   1   1 

min(CW) [1] 226
max(CW) [1] 473
range(CW) [1] 226 473

bins<-seq(225.5,485.5,10)
bins  [1] 225.5 235.5 245.5 255.5 265.5 275.5 285.5 295.5 305.5 315.5 325.5 335.5 345.5
[14] 355.5 365.5 375.5 385.5 395.5 405.5 415.5 425.5 435.5 445.5 455.5 465.5 475.5
[27] 485.5

datos<-cut(CW,bins)
datos [1] (236,246] (296,306] (316,326] (286,296] (326,336] (256,266] (286,296] (316,326]
 [9] (376,386] (346,356] (396,406] (366,376] (376,386] (226,236] (286,296] (356,366]
[17] (336,346] (226,236] (316,326] (336,346] (466,476] (346,356] (426,436] (426,436]
[25] (386,396] (416,426] (376,386] (326,336]
26 Levels: (226,236] (236,246] (246,256] (256,266] (266,276] (276,286] ... (476,486]

freq_long<-table(datos)
freq_long datos
(226,236] (236,246] (246,256] (256,266] (266,276] (276,286] (286,296] (296,306] 
        2         1         0         1         0         0         3         1 
(306,316] (316,326] (326,336] (336,346] (346,356] (356,366] (366,376] (376,386] 
        0         3         2         2         2         1         1         3 
(386,396] (396,406] (406,416] (416,426] (426,436] (436,446] (446,456] (456,466] 
        1         1         0         1         2         0         0         0 
(466,476] (476,486] 
        1         0 


transform(freq_long)
transform(freq_long, Relativ= prop.table(Freq), Acum= cumsum(Freq))

Gráfico
hist(CW, breaks = bins, main = 'Longitudes de pico', xlab = "Longitud", ylab = "Frecuencia", col = "coral2")

Ejercicio 9: Invente unos datos de medidas, como se hizo en el caso de los cráneos, y genere todo el ejercicio hasta el histograma.  Busque otro tipo de distribuciones para generar las variables

Distribución 
Se usará la distribución de poissson para medir la probabilidad del número de veces medio que especies de coleopteros visitan un especie de planta en un determinado tiempo dadas las horas de luz que recibe la planta

visitas<-rpois(n =32, lambda = 4 )
visitas  [1] 4 7 3 2 6 4 6 2 5 5 7 4 5 3 2 7 3 4 2 6 3 5 3 2 4 3 2 4 4 2 3 5

horas<-rpois(n =32, lambda = 8)
horas  [1] 12  5  7  6  7  5  8 13 10 12  8  9  8  5  6  8  7 12  8  7  6 10  9  5  4 10  9
[28]  5  4  5  7  5
colnames(Tabla_relacion) <- c('Especie', 'Visitas','Horas')

relacion<-cbind(visitas, horas)
relacion
Tabla_relacion <- as.data.frame(cbind(paste('spp',1:32,sep = '_'),relacion))

Para obtener la proporción de numero de visitas dadas las horas de luz que recibe la planta todo en el intervalo de un día 
prp <- visitas/horas 
prp [1] 0.66666667 0.40000000 0.71428571 1.16666667 0.85714286 0.60000000 0.62500000
 [8] 0.61538462 0.80000000 0.25000000 0.37500000 0.22222222 0.37500000 0.80000000
[15] 1.16666667 0.50000000 0.42857143 0.08333333 0.37500000 0.85714286 0.50000000
[22] 0.20000000 0.33333333 1.00000000 0.75000000 0.50000000 0.55555556 0.80000000
[29] 0.75000000 0.80000000 0.42857143 0.80000000

Tabla_relacion_prp <- cbind.data.frame(Tabla_relacion, prp)
Tabla_relacion_prp 

Histograma para frecuencia de visitas 
tabla<-table(visitas)
tabla 
 1  2  3  4  5  6  7  8 
 1  3 11  5  5  2  2  3
 
min(visitas)[1] 1
max(visitas)[1] 8
range(visitas)[1] 1 8

bins<-seq(0.5, 10.5,2)
bins 0.5  2.5  4.5  6.5  8.5 10.5

datos<-cut(visitas,bins)
datos [1] (6.5,8.5] (0.5,2.5] (4.5,6.5] (6.5,8.5] (4.5,6.5] (2.5,4.5] (4.5,6.5] (6.5,8.5]
 [9] (6.5,8.5] (2.5,4.5] (2.5,4.5] (0.5,2.5] (2.5,4.5] (2.5,4.5] (6.5,8.5] (2.5,4.5]
[17] (2.5,4.5] (0.5,2.5] (2.5,4.5] (4.5,6.5] (2.5,4.5] (0.5,2.5] (2.5,4.5] (4.5,6.5]
[25] (2.5,4.5] (4.5,6.5] (4.5,6.5] (2.5,4.5] (2.5,4.5] (2.5,4.5] (2.5,4.5] (2.5,4.5]
Levels: (0.5,2.5] (2.5,4.5] (4.5,6.5] (6.5,8.5] (8.5,10.5]
freq_long<-table(datos)
freq_long datos
 (0.5,2.5]  (2.5,4.5]  (4.5,6.5]  (6.5,8.5] (8.5,10.5] 
         4         16          7          5          0 
 
transform(freq_long)
transform(freq_long, Relativ= prop.table(Freq), Acum= cumsum(Freq))

Gráfico
hist(visitas, breaks = bins, main = 'Coleopteros y visitas a planta', xlab = "visitas por día", ylab = "Frecuencia", col = "green4")

Ejercicio 10:Busque en qué casos sirve cada distribución o para qué se usan.

1. Distribución binomial (Para variables Bernoulli)
Se utiliza en forma de distribución binomial cuando se ejecuta n veces un evento Bernoulli, donde cada intento tiene solo dos resultados posibles, las condiciones no varían y los experimentos son independientes.
Funciones: De probabilidad  dbinom(x = ,size = ,prob = )  
          Sumatoria de probabilidades hacía la izq. y der. pbinom(q = ,size = ,prob = ,lower.tail = )
          Obtener un valor determinado dado un porcentaje de probabilidad qbinom()
          Obtener distribuciones dados parámetros de probabilidad rbinom()
          
2. Distribución de Poisson
Se utiliza para obtener la probabilidad de que ocurra un número de sucesos en un tiempo o espacio determinado. Esta definida por la variable lamda, que es el número de sucesos medio que ocurren en un determinado espacio o tiempo. Los sucesos deben expresarse en unidad de tiempo o área. 
Funciones: De probabilidad  dpois( )  
          Sumatoria de probabilidades hacía la izq. y der. ppois()
          Obtener un valor determinado dado un porcentaje de probabilidad qpois()
          Obtener distribuciones dados parámetros de probabilidad rpois()
 
 3.Distribución normal
 Para variables aleatorias continuas con función de densidad como caracteres morfológicos, fisiológicos etc. Esta función queda definida por parámetros de la media y la desviación estándar
 Funciones: De probabilidad  dnorm( )  
          Sumatoria de probabilidades hacía la izq. y der. pnorm()
          Obtener un valor determinado dado un porcentaje de probabilidad qnorm()
          Obtener distribuciones dados parámetros de probabilidad rnorm()
 
 4. Distribución normal estándar (Z)
 Se utiliza para determinar las probabilidades de todas las distribuciones de probabilidad normal. La variable Z o tipificada de x, transforma la media en desviaciones estándar normales modficando la escala. Esta expresa la distancia entre un valor particular de x y la media aritmética en unidades de desviación estándar. 
 
 

